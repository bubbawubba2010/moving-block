import pygame import random import sys # Initialize pygame pygame.init() # Constants SCREEN_WIDTH = 800 SCREEN_HEIGHT = 600 BLOCK_SIZE = 30 # Colors WHITE = (255, 255, 255) BLACK = (0, 0, 0) GREEN = (0, 255, 0) BROWN = (139, 69, 19) # Setup screen screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT)) pygame.display.set_caption("Minecraft-like Game Prototype") # Player setup player_x = SCREEN_WIDTH // 2 player_y = SCREEN_HEIGHT // 2 player_speed = 5 # Create a simple world (list of blocks) world = [] # Generate a basic flat ground world for x in range(0, SCREEN_WIDTH, BLOCK_SIZE): for y in range(SCREEN_HEIGHT - 100, SCREEN_HEIGHT, BLOCK_SIZE): world.append((x, y, BROWN)) # Ground blocks (brown) # Function to draw the world (render blocks) def draw_world(): for block in world: pygame.draw.rect(screen, block[2], (block[0], block[1], BLOCK_SIZE, BLOCK_SIZE)) # Function to draw the player def draw_player(): pygame.draw.rect(screen, GREEN, (player_x, player_y, BLOCK_SIZE, BLOCK_SIZE)) # Main game loop running = True while running: screen.fill(WHITE) # Clear the screen draw_world() # Draw the world draw_player() # Draw the player # Handle events for event in pygame.event.get(): if event.type == pygame.QUIT: running = False # Get keys pressed for player movement keys = pygame.key.get_pressed() if keys[pygame.K_LEFT]: player_x -= player_speed if keys[pygame.K_RIGHT]: player_x += player_speed if keys[pygame.K_UP]: player_y -= player_speed if keys[pygame.K_DOWN]: player_y += player_speed # Prevent the player from going out of bounds if player_x < 0: player_x = 0 if player_x > SCREEN_WIDTH - BLOCK_SIZE: player_x = SCREEN_WIDTH - BLOCK_SIZE if player_y < 0: player_y = 0 if player_y > SCREEN_HEIGHT - BLOCK_SIZE: player_y = SCREEN_HEIGHT - BLOCK_SIZE pygame.display.update() # Update the display # Delay for a smoother gameplay pygame.time.delay(100) pygame.quit() sys.exit()
